eureka:
  instance:
    hostname: localhost
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka

server:
  port: 8081

spring:
  application:
    name: order-service
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://localhost:5432/order-service
    username: postgres
    password: ${postgres_password}
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: update
  cloud:
    openfeign:
      circuitbreaker:
        enabled: true
  kafka:
    bootstrap-servers: localhost:9092
    template:
      default-topic: notification-topic
      producer:
        key-serializer: org.apache.kafka.common.serialization.StringSerializer
        value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
  zipkin:
    base-url: http://localhost:9411

actuator:
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: always

management:
  tracing:
    sampling:
      probability: 1.0
  endpoint:
    health:
      show-details: always
  health:
    circuitbreakers:
      enabled: true

resilience4j.circuitbreaker:
  instances:
    stock:
      registerHealthIndicator: true
      eventConsumerBufferSize: 10
      slidingWindowSize: 5
      slidingWindowType: COUNT_BASED
      failureRateThreshold: 50
      waitDurationInOpenState: 10s
      permittedNumberOfCallsInHalfOpenState: 3
      automaticTransitionFromOpenToHalfOpenEnabled: true
  timeLimiter:
    instances:
      stock:
        timeoutDuration: 3s
  retry:
    instances:
      stock:
        maxRetryAttempts: 3
        waitDuration: 3s
        retryExceptions:
          - java.io.IOException
          - java.util.concurrent.TimeoutException

application:
  feign:
    stock-service:
      url: http://localhost:8222/api/v1/stock